/*
В первой части курса была следующая задача.

Вам требуется реализовать функцию, которая принимает на вход два указателя на базовый класс Expression, и возвращает
true, если оба указателя указывают на самом деле на объекты одного и того же класса, и false в противном случае (т.е.
если оба указателя указывают на BinaryOperation, то возвращается true, а если один из них указывает на Number, а второй
на BinaryOperation, то false).

Реализуйте её при помощи typeid.

Требования к реализации: Использовать dynamic_cast и вызывать методы по переданным указателям запрещено.

Напишите программу. Тестируется через stdin → stdout
*/

#include <iostream>

using namespace std;

#include <typeinfo>

/*bool check_equals(Expression const *left, Expression const *right)
{
  return (typeid(*left) == typeid(*right));
}*/

/*
Предположим, что вам даётся два указателя на объект некоторого сложного полиморфного класса, который использует
множественное наследование. Оба указателя имеют один и тот же тип, но могут ссылаться на разные однотипные базы внутри
одного объекта.

Напишите шаблонную функцию, которая по двум однотипным указателям проверяет, указывают ли они на один объект.

Напишите программу. Тестируется через stdin → stdout

*/

int main()
{
  cout << "Hello World!" << endl;
  return 0;
}
